description: >
  Install and run sonar-scanner

parameters:
  version:
    # renovate: datasource=github-releases depName=SonarSource/sonar-scanner-cli versioning=regex:^(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)\.(?<build>\d+)$
    default: "6.2.1.4610"
    description: Version of sonar-scanner to install
    type: string
  cache_version:
    default: 1
    description: increment this value if the cache is corrupted and you want to start with a clean cache
    type: integer
  sonar_token:
    default: SONAR_TOKEN
    description: Name of the environment variable where the SonarCloud API token is stored
    type: env_var_name
  default_branch:
    default: main
    description: Name of the default branch for pull request analysis
    type: string
  pr_provider:
    default: GitHub
    description: Pull Request provider for sonar-scanner
    type: string
  run_when:
    default: on_success
    description: Behaviour to add to steps in scanning
    type: enum
    enum:
      - on_success
      - on_fail
      - always

steps:
  - run:
      command: mkdir -p /tmp/cache/scanner
      name: Create cache directory if it doesn't exist
      when: <<parameters.run_when>>
  - restore_cache:
      keys:
        - v<<parameters.cache_version>>-sonarcloud-scanner-<<parameters.version>>
      when: <<parameters.run_when>>
  - run:
      name: Install and run sonar-scanner
      environment:
        PARAM_VERSION: <<parameters.version>>
        PARAM_DEFAULT_BRANCH: <<parameters.default_branch>>
        PARAM_PR_PROVIDER: <<parameters.pr_provider>>
        PARAM_SONAR_TOKEN: <<parameters.sonar_token>>
      command: <<include(scripts/run.sh)>>
      when: <<parameters.run_when>>
  - save_cache:
      key: v<<parameters.cache_version>>-sonarcloud-scanner-<<parameters.version>>
      paths: /tmp/cache/scanner
      when: <<parameters.run_when>>
